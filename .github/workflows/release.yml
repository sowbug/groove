name: Release

on:
  release:
    types: [created]

jobs:
  release-x86_64:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
        # Set up the build machine
      - name: Install Linux x86_64 build dependencies
        run: sudo apt -qq update; sudo apt -y install pkg-config libfontconfig-dev librust-alsa-sys-dev gcc
        if: startsWith(matrix.os, 'ubuntu')

      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: ${{ matrix.target }}
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

        # Get the source
      - name: Configure git to use 'main' as name for initial branch
        # This is needed because of a terrible hack I'm using to insert the git
        # hash into the binary. https://stackoverflow.com/a/49502807/344467
        # GitHub uses git version > 2.39.1, so this config should be recognized
        # (2.28+).
        run: git config --global init.defaultBranch main 
      - name: Check out source
        uses: actions/checkout@v3

        # Build and test
      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}
      - name: Test release
        run: cargo test --release --target ${{ matrix.target }}

        # Upload build products
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: groove-${{ matrix.target }}
          path: |
            target/release/groove-cli*
            target/release/groove-gui*
            perf-output.txt
      - name: Upload binaries
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: groove-gui,groove-cli
          include: README.md,LICENSE.txt,assets,projects
          leading_dir: true
          archive: groove-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

  release-cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu # ARM Chromebooks & 64-bit RPi
          - armv7-unknown-linux-gnueabihf # Raspberry Pi 3/4 32-bit
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: groove-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/groove-cli*
            target/${{ matrix.target }}/release/groove-gui*
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: groove-gui,groove-cli
          include: README.md,LICENSE.txt,assets,projects
          target: ${{ matrix.target }}
          leading_dir: true
          archive: groove-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}
