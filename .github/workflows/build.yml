name: Build and test for win/osx/linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  fmt:
    name: cargo-fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Update toolchain & add rustfmt
        run: |
          rustup update
          rustup component add rustfmt
      - name: Run rustfmt
        run: cargo fmt --all --check

  test-x86_64:
    name: Test x86_64
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
        # Set up the build machine
      - name: Install Linux x86_64 build dependencies
        run: sudo apt update; sudo apt -y install pkg-config libfontconfig-dev librust-alsa-sys-dev
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: ${{ matrix.target }}
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

        # Get the source
      - uses: actions/checkout@v2

        # Test
      - run: cargo test --verbose --target ${{ matrix.target }}

  test-cross:
    name: Test ${{matrix.target}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu       # ARM Chromebooks & 64-bit RPi
          - armv7-unknown-linux-gnueabihf   # Raspberry Pi 3/4 32-bit
    steps:
      - name: Install build dependencies
        run: dpkg --add-architecture arm64; |
             apt update; |
             apt -y install |
             pkg-config:arm64 |
             libfontconfig-dev:arm64 |
             libasound2-dev:arm64

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{matrix.target}}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{matrix.target}}
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --verbose --target ${{matrix.target}}
