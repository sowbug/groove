name: Build and test for win/osx/linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-all:
    name: Build/Test
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu      # for most Linux machines
            os: ubuntu-20.04                      # TODO: change to 22.04 when 20.04 is EOL
          - target: armv7-unknown-linux-gnueabihf # Raspberry Pi 3/4 and maybe ARM Chromebooks
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: sudo apt update
        if: startsWith(matrix.os, 'ubuntu')
      - run: sudo apt -y install pkg-config libfontconfig-dev librust-alsa-sys-dev
        if: startsWith(matrix.os, 'ubuntu')

      - uses: actions/checkout@master
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: ${{ matrix.target }}
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      - run: cargo build --target ${{ matrix.target }}
      - run: cargo test --verbose

  fmt:
    name: cargo-fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Update toolchain & add rustfmt
        run: |
          rustup update
          rustup component add rustfmt
      - name: Run rustfmt
        run: cargo fmt --all --check
